{
  "type": "component",
  "meta": {
    "docsUrl": "https://v1.quasar.dev/vue-components/floating-action-button"
  },
  "behavior": {
    "$listeners": {
      "desc": "All native events are being propagated (you don't need the '.native' modifier)"
    }
  },
  "props": {
    "type": {
      "type": "String",
      "desc": "Define the button HTML DOM type",
      "default": "a",
      "values": [
        "a",
        "submit",
        "button",
        "reset"
      ],
      "category": "general"
    },
    "outline": {
      "type": "Boolean",
      "desc": "Use 'outline' design for Fab button",
      "category": "style"
    },
    "push": {
      "type": "Boolean",
      "desc": "Use 'push' design for Fab button",
      "category": "style"
    },
    "flat": {
      "type": "Boolean",
      "desc": "Use 'flat' design for Fab button",
      "category": "style"
    },
    "unelevated": {
      "type": "Boolean",
      "desc": "Remove shadow",
      "category": "style",
      "addedIn": "v1.9.0"
    },
    "padding": {
      "type": "String",
      "desc": "Apply custom padding (vertical [horizontal]); Size in CSS units, including unit name or standard size name (none|xs|sm|md|lg|xl); Also removes the min width and height when set",
      "examples": [
        "16px",
        "10px 5px",
        "2rem",
        "xs",
        "md lg"
      ],
      "category": "style",
      "addedIn": "v1.11.0"
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style"
    },
    "text-color": {
      "type": "String",
      "desc": "Overrides text color (if needed); Color name from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style"
    },
    "glossy": {
      "type": "Boolean",
      "desc": "Apply the glossy effect over the button",
      "category": "style"
    },
    "external-label": {
      "type": "Boolean",
      "desc": "Display label besides the FABs, as external content",
      "category": "style|content",
      "addedIn": "v1.9.0"
    },
    "label": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "The label that will be shown when Fab is extended",
      "default": "",
      "examples": [
        "Button Label"
      ],
      "category": "content",
      "addedIn": "v1.9.0"
    },
    "label-position": {
      "type": "String",
      "desc": "Position of the label around the icon",
      "values": [
        "top",
        "right",
        "bottom",
        "left"
      ],
      "category": "style|content",
      "addedIn": "v1.9.0"
    },
    "hide-label": {
      "type": "Boolean",
      "desc": "Hide the label; Useful for animation purposes where you toggle the visibility of the label",
      "category": "style|content",
      "addedIn": "v1.9.0"
    },
    "label-class": {
      "type": [
        "Array",
        "String",
        "Object"
      ],
      "desc": "Class definitions to be attributed to the label container",
      "examples": [
        "my-special-class",
        ":input-class=\"{ 'my-special-class': <condition> }\""
      ],
      "category": "style",
      "addedIn": "v1.9.0"
    },
    "label-style": {
      "type": [
        "Array",
        "String",
        "Object"
      ],
      "desc": "Style definitions to be attributed to the label container",
      "examples": [
        "background-color: #ff0000",
        ":input-style=\"{ backgroundColor: '#ff0000' }\""
      ],
      "category": "style",
      "addedIn": "v1.9.0"
    },
    "square": {
      "type": "Boolean",
      "desc": "Apply a rectangle aspect to the FAB",
      "category": "style",
      "addedIn": "v1.9.0"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode",
      "category": "state"
    },
    "icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg",
        "img:statics/path/to/some_image.png"
      ],
      "category": "content"
    },
    "anchor": {
      "type": "String",
      "desc": "How to align the Fab Action relative to Fab expand side; By default it uses the align specified in QFab",
      "values": [
        "start",
        "center",
        "end"
      ],
      "category": "style|content",
      "addedIn": "v1.9.0"
    },
    "to": {
      "type": [
        "String",
        "Object"
      ],
      "desc": "Equivalent to Vue Router <router-link> 'to' property",
      "examples": [
        "/home/dashboard",
        ":to=\"{ name: 'my-route-name' }\""
      ],
      "category": "router"
    },
    "replace": {
      "type": "Boolean",
      "desc": "Equivalent to Vue Router <router-link> 'replace' property",
      "category": "router"
    }
  },
  "slots": {
    "default": {
      "desc": "Suggestion for this slot: QTooltip"
    }
  },
  "events": {
    "click": {
      "desc": "Emitted when user clicks/taps on the component",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object",
          "required": true
        }
      }
    }
  },
  "methods": {
    "click": {
      "desc": "Emulate click on QFabAction",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object"
        }
      }
    }
  }
}