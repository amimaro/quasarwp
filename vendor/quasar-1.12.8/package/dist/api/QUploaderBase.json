{
  "type": "component",
  "meta": {
    "docsUrl": "https://v1.quasar.dev/vue-components/uploader"
  },
  "props": {
    "multiple": {
      "type": "Boolean",
      "desc": "Allow multiple file uploads",
      "category": "behavior"
    },
    "accept": {
      "type": "String",
      "desc": "Comma separated list of unique file type specifiers. Maps to 'accept' attribute of native input type=file element",
      "examples": [
        ".jpg, .pdf, image/*",
        "image/jpeg, .pdf"
      ],
      "category": "behavior"
    },
    "capture": {
      "type": "String",
      "desc": "Optionally, specify that a new file should be captured, and which device should be used to capture that new media of a type defined by the 'accept' prop. Maps to 'capture' attribute of native input type=file element",
      "values": [
        "user",
        "environment"
      ],
      "category": "behavior",
      "addedIn": "v1.12.6"
    },
    "max-file-size": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Maximum size of individual file in bytes",
      "examples": [
        1024,
        1048576
      ],
      "category": "behavior"
    },
    "max-total-size": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Maximum size of all files combined in bytes",
      "examples": [
        1024,
        1048576
      ],
      "category": "behavior"
    },
    "max-files": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Maximum number of files to contain",
      "examples": [
        ":max-files=\"5\"",
        "10"
      ],
      "category": "behavior",
      "addedIn": "v1.11.2"
    },
    "filter": {
      "type": "Function",
      "desc": "Custom filter for added files; Only files that pass this filter will be added to the queue and uploaded; For best performance, reference it from your scope and do not define it inline",
      "params": {
        "files": {
          "type": [
            "FileList",
            "Array"
          ],
          "desc": "Candidate files to be added to queue"
        }
      },
      "returns": {
        "type": "Array",
        "desc": "Filtered files to be added to queue"
      },
      "examples": [
        ":filter=\"files => files.filter(file => file.size === 1024)\""
      ],
      "category": "behavior"
    },
    "label": {
      "type": "String",
      "desc": "Label for the uploader",
      "examples": [
        "Upload photo here"
      ],
      "category": "content"
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style"
    },
    "text-color": {
      "type": "String",
      "desc": "Overrides text color (if needed); Color name from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style"
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color",
      "category": "style"
    },
    "square": {
      "type": "Boolean",
      "desc": "Removes border-radius so borders are squared",
      "category": "style"
    },
    "flat": {
      "type": "Boolean",
      "desc": "Applies a 'flat' design (no default shadow)",
      "category": "style"
    },
    "bordered": {
      "type": "Boolean",
      "desc": "Applies a default border to the component",
      "category": "style"
    },
    "no-thumbnails": {
      "type": "Boolean",
      "desc": "Don't display thumbnails for image files",
      "category": "content"
    },
    "auto-upload": {
      "type": "Boolean",
      "desc": "Upload files immediately when added",
      "category": "behavior"
    },
    "hide-upload-btn": {
      "type": "Boolean",
      "desc": "Don't show the upload button",
      "category": "behavior"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode",
      "category": "state"
    },
    "readonly": {
      "type": "Boolean",
      "desc": "Put component in readonly mode",
      "category": "state"
    }
  },
  "scopedSlots": {
    "header": {
      "desc": "Slot for custom header; Scope is the QUploader instance itself"
    },
    "list": {
      "desc": "Slot for custom list; Scope is the QUploader instance itself"
    }
  },
  "events": {
    "rejected": {
      "desc": "Emitted after files are picked and some do not pass the validation props (accept, max-file-size, max-total-size, filter, etc)",
      "params": {
        "rejectedEntries": {
          "type": "Array",
          "desc": "Array of { failedPropValidation: string, file: File } Objects for files that do not pass the validation"
        }
      },
      "addedIn": "v1.11.2"
    },
    "added": {
      "desc": "Emitted when files are added into the list",
      "params": {
        "files": {
          "type": "Array",
          "desc": "Array of files that were added"
        }
      }
    },
    "removed": {
      "desc": "Emitted when files are removed from the list",
      "params": {
        "files": {
          "type": "Array",
          "desc": "Array of files that were removed"
        }
      }
    },
    "start": {
      "desc": "Started working"
    },
    "finish": {
      "desc": "Finished working (regardless of success or fail)"
    }
  },
  "methods": {
    "pickFiles": {
      "desc": "Trigger file pick; Must be called as a direct consequence of user interaction (eg. in a click handler), due to browsers security policy",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object"
        }
      }
    },
    "addFiles": {
      "desc": "Add files programmatically",
      "params": {
        "files": {
          "type": [
            "FileList",
            "Array"
          ],
          "desc": "Array of files (instances of File)",
          "required": true
        }
      }
    },
    "reset": {
      "desc": "Resets uploader to default; Empties queue, aborts current uploads"
    },
    "removeUploadedFiles": {
      "desc": "Removes already uploaded files from the list"
    },
    "removeQueuedFiles": {
      "desc": "Remove files that are waiting for upload to start (same as clicking the left clear button)"
    },
    "removeFile": {
      "desc": "Remove specified file from the queue",
      "params": {
        "file": {
          "type": "Object",
          "desc": "File to remove (instance of File)",
          "required": true
        }
      }
    }
  }
}